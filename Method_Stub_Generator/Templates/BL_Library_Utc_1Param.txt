[TestMethod]
public void #SQLLIBMETHODNAME#_DaApiUrl_Empty()
{
    // Act
    var #CLASSNAMEASPARAM# = new #CLASSNAME#();
    var result = #CLASSNAMEASPARAM#.#SQLLIBMETHODNAME#(string.Empty, TestSignalRId);

    // Assert
    if (result.Exception?.InnerException != null)
    {
        Assert.AreEqual("Value cannot be null.\r\nParameter name: #DATAOBJNAMEASPARAM#ApiUrl",
            result.Exception.InnerException.Message);
    }
}

[TestMethod]
public void #SQLLIBMETHODNAME#_SignalRId_Empty()
{
    // Act
    var #CLASSNAMEASPARAM# = new #CLASSNAME#();
    var result = #CLASSNAMEASPARAM#.#SQLLIBMETHODNAME#(TestDataAccessSqlApiUrl, string.Empty);

    // Assert
    if (result.Exception?.InnerException != null)
    {
        Assert.AreEqual("Value cannot be null.\r\nParameter name: signalRClientId",
            result.Exception.InnerException.Message);
    }
}

[TestMethod]
public void #SQLLIBMETHODNAME#_Invalid_Test()
{
    // Arrange
    var httpResponseMessage = new HttpResponseMessage()
    {
        StatusCode = HttpStatusCode.BadRequest,
        Content = new StringContent(ReqFailMessage)
    };
    var mockHttpClient = GetHttpClientWithMockMessageHandler(httpResponseMessage);

    // Act
    var #CLASSNAMEASPARAM# = new #CLASSNAME#(mockHttpClient);
    var result = #CLASSNAMEASPARAM#.#SQLLIBMETHODNAME#(TestDataAccessSqlApiUrl, TestSignalRId).Result;

    // Assert
    Assert.IsFalse(string.IsNullOrEmpty(result));
    Assert.AreEqual(result, ReqFailMessage);
}

[TestMethod]
public void #SQLLIBMETHODNAME#_Valid()
{
    // Arrange
    var getReqResponseContent = "[{\"Property1\":\"Value1\"}]";

    var httpResponseMessage = new HttpResponseMessage()
    {
        StatusCode = HttpStatusCode.OK,
        Content = new StringContent(getReqResponseContent)
    };
    var mockHttpClient = GetHttpClientWithMockMessageHandler(httpResponseMessage);

    // Act
    var #CLASSNAMEASPARAM# = new #CLASSNAME#(mockHttpClient);
    var result = #CLASSNAMEASPARAM#.#SQLLIBMETHODNAME#(TestDataAccessSqlApiUrl, TestSignalRId).Result;

    // Assert
    Assert.IsFalse(string.IsNullOrEmpty(result));
    Assert.AreEqual(result, getReqResponseContent);
}
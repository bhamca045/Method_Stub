/// <summary>
/// 
/// </summary>
/// <param name="#DATAOBJNAMEASPARAM#"></param>
/// <param name="signalRClientId">SignalRClientId to notify client call.</param>
/// <returns>Returns the result as json string.</returns>
[Route("#SQLLIBMETHODNAME#/{#DATAOBJNAMEASPARAM#}/{signalRClientId?}")]
[HttpGet]
public async Task<string> #SQLLIBMETHODNAME#(#DATAOBJNAME# #DATAOBJNAMEASPARAM#, string signalRClientId = "")
{
    try
    {
	    var #DATAOBJNAMEASPARAM#Sp = _configurationPackage.Settings.Sections["StoredProc"].Parameters[""].Value;
        var #DATAOBJNAMEASPARAM#Results = await #CLASSNAMEASPARAM#.#SQLLIBMETHODNAME#(#DATAOBJNAMEASPARAM#, _sqlCdoSuite6ConnectionString, #DATAOBJNAMEASPARAM#Sp, signalRClientId);
        return #DATAOBJNAMEASPARAM#Results;
    }

    catch (Exception ex)
    {
        _telemetryClient.TrackException(ex);
        _errorPublishLibrary.ReportError(ex, Assembly.GetExecutingAssembly().ToString(),
            ex.GetType().ToString(),
            "Error", Environment.UserName, "", signalRClientId);
        throw;
    }
}